
import Head from 'next/head';
import Container from '@/containers/container';
import { SettingsContent, ServiceContent } from '@/helpers/data_utils';

import ServicesTempOneBan from '@/components/ServicesTempOneBan/ServicesTempOneBan';
import ServicesDesignAgency from '@/components/ServicesDesignAgency/ServicesDesignAgency';
import StobWorkWithUs from '@/components/StobWorkWithUs/WorkWithUs';
import BuildReact from '@/components/BuildReact/BuildReact';
import StoStep from '@/components/StoStep/StoStep';
import ServicesFaq from '@/components/ServicesFaq/ServicesFaq';
import StobGetBusiness from '@/components/StobGetBusiness/StobGetBusiness';
import HomeSuccessProduct from '@/components/HomeSuccessProduct/HomeSuccessProduct';




function ServiceDetails(props) {
    const serviceContent = props.serviceData.data.service;
    const serviceData = serviceContent?.content ? JSON.parse(serviceContent?.content) : '';

    return (
        <>
        <Head>
            <title>Service detail page</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
            {Number(serviceData?.banner?.status) === 1 && <ServicesTempOneBan serviceData={serviceData} />}
			{Number(serviceData?.section1?.status) === 1 && <StobGetBusiness serviceData={serviceData} />}
			{Number(serviceData?.section2?.status) === 1 && <ServicesDesignAgency serviceData={serviceData} />}
			{Number(serviceData?.section3?.status) === 1 && <StobWorkWithUs serviceData={serviceData}/>}
			{Number(serviceData?.section4?.status) === 1 && <BuildReact serviceData={serviceData} />}
			{Number(serviceData?.section5?.status) === 1 && <StoStep serviceData={serviceData} />}
			{Number(serviceData?.section6?.status) === 1 && <ServicesFaq serviceData={serviceData} />}
            <HomeSuccessProduct />
        </>
    );
}
export default Container(ServiceDetails);

export async function getServerSideProps(context){
    const {params, req, res} = context;
    const [slug]  = params.slug;
    return {
        props:{
            settingsContent : await SettingsContent(),
            serviceData: await ServiceContent(slug)
        }
    };
  }